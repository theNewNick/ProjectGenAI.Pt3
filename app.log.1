2024-12-08 11:30:00,651 ERROR: Error in OpenAI API call [in /home/ec2-user/financial_modeling_assistant/app.py:221]
Traceback (most recent call last):
  File "/home/ec2-user/financial_modeling_assistant/app.py", line 209, in call_openai_api
    response = openai.ChatCompletion.create(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.AuthenticationError: Incorrect API key provided: sk-proj-********************************************************************************************************************************************************G4gA. You can find your API key at https://platform.openai.com/account/api-keys.
2024-12-08 11:30:00,651 ERROR: Failed to extract JSON from the assistant's reply. [in /home/ec2-user/financial_modeling_assistant/app.py:701]
2024-12-08 11:30:00,651 DEBUG: Validating assumptions: {} [in /home/ec2-user/financial_modeling_assistant/app.py:180]
2024-12-08 11:30:00,651 DEBUG: Validated assumptions: {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2} [in /home/ec2-user/financial_modeling_assistant/app.py:203]
2024-12-08 11:30:00,651 DEBUG: After feedback: {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2} [in /home/ec2-user/financial_modeling_assistant/app.py:968]
2024-12-08 11:30:00,652 DEBUG: Adjusting based on historical data for WMT [in /home/ec2-user/financial_modeling_assistant/app.py:757]
2024-12-08 11:30:00,668 WARNING: Field 'Income Before Tax' not found in financial data for WMT. [in /home/ec2-user/financial_modeling_assistant/app.py:768]
2024-12-08 11:30:00,668 DEBUG: Validating assumptions: {} [in /home/ec2-user/financial_modeling_assistant/app.py:180]
2024-12-08 11:30:00,668 DEBUG: Validated assumptions: {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2} [in /home/ec2-user/financial_modeling_assistant/app.py:203]
2024-12-08 11:30:00,668 DEBUG: After historical data: {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2} [in /home/ec2-user/financial_modeling_assistant/app.py:970]
2024-12-08 11:30:00,668 DEBUG: Adjusting based on sentiment for WMT [in /home/ec2-user/financial_modeling_assistant/app.py:708]
2024-12-08 11:30:00,923 DEBUG: Sentiment adjustments: {'revenue_growth_rate': 0.07, 'wacc': 0.09} [in /home/ec2-user/financial_modeling_assistant/app.py:749]
2024-12-08 11:30:00,923 DEBUG: Validating assumptions: {'revenue_growth_rate': 0.07, 'wacc': 0.09} [in /home/ec2-user/financial_modeling_assistant/app.py:180]
2024-12-08 11:30:00,923 DEBUG: Validated assumptions: {'revenue_growth_rate': 0.07, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.09, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2} [in /home/ec2-user/financial_modeling_assistant/app.py:203]
2024-12-08 11:30:00,923 DEBUG: After sentiment: {'revenue_growth_rate': 0.07, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.09, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2} [in /home/ec2-user/financial_modeling_assistant/app.py:972]
2024-12-08 11:30:00,923 DEBUG: All agent adjustments collected: {'sector_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'industry_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'sub_industry_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'scenario_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'company_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'feedback_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'historical_data_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'sentiment_agent': {'revenue_growth_rate': 0.07, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.09, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}} [in /home/ec2-user/financial_modeling_assistant/app.py:984]
2024-12-08 11:30:00,923 DEBUG: Combined pre-sanity assumptions: {'revenue_growth_rate': 0.0525, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.09874999999999999, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.19999999999999998} [in /home/ec2-user/financial_modeling_assistant/app.py:991]
2024-12-08 11:30:00,924 DEBUG: Running pre-validation sanity check [in /home/ec2-user/financial_modeling_assistant/app.py:928]
2024-12-08 11:30:00,924 DEBUG: Calling OpenAI API with prompt: 
You are a financial analyst with deep knowledge of WMT.
Proposed assumptions:
{
  "revenue_growth_rate": 0.0525,
  "tax_rate": 0.21,
  "cogs_pct": 0.6,
  "wacc": 0.09874999999999999,
  "terminal_growth_rate": 0.02,
  "operating_expenses_pct": 0.19999999999999998
}

Historical WACC ~ 0.1, Historical revenue growth ~ 0.05.

Check if assumptions are reasonable. If not, provide corrected assumptions in valid JSON without extra text:
{
  "revenue_growth_rate": ...,
  "tax_rate": ...,
  "cogs_pct": ...,
  "wacc": ...,
  "terminal_growth_rate": ...,
  "operating_expenses_pct": ...
}
... [in /home/ec2-user/financial_modeling_assistant/app.py:207]
2024-12-08 11:30:00,981 ERROR: Error in OpenAI API call [in /home/ec2-user/financial_modeling_assistant/app.py:221]
Traceback (most recent call last):
  File "/home/ec2-user/financial_modeling_assistant/app.py", line 209, in call_openai_api
    response = openai.ChatCompletion.create(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.AuthenticationError: Incorrect API key provided: sk-proj-********************************************************************************************************************************************************G4gA. You can find your API key at https://platform.openai.com/account/api-keys.
2024-12-08 11:30:00,982 DEBUG: Agent adjustments after sanity check: {'sector_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'industry_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'sub_industry_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'scenario_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'company_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'feedback_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'historical_data_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'sentiment_agent': {'revenue_growth_rate': 0.07, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.09, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'sanity_check_agent': {'revenue_growth_rate': 0.0525, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.09874999999999999, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.19999999999999998}} [in /home/ec2-user/financial_modeling_assistant/app.py:997]
2024-12-08 11:30:00,982 DEBUG: Getting agent importance weights [in /home/ec2-user/financial_modeling_assistant/app.py:821]
2024-12-08 11:30:00,982 DEBUG: Calling OpenAI API with prompt: 
You are a financial expert. Assign an importance weight between 0 and 1 to each of the following agents based on their role in providing financial assumptions for a DCF model. Consider that historical data is a strong indicator of future performance.

- sector_agent
- industry_agent
- sub_industry_agent
- scenario_agent
- company_agent
- feedback_agent
- historical_data_agent
- sentiment_agent

The sum of all importance weights should equal 1.

Provide the weights in valid JSON format like this:

{
  "sector_agent": ...,
  "industry_agent": ...,
  "sub_industry_agent": ...,
  "scenario_agent": ...,
  "company_agent": ...,
  "feedback_agent": ...,
  "historical_data_agent": ...,
  "sentiment_agent": ...
}

Do not include any comments or extra text.
... [in /home/ec2-user/financial_modeling_assistant/app.py:207]
2024-12-08 11:30:01,049 ERROR: Error in OpenAI API call [in /home/ec2-user/financial_modeling_assistant/app.py:221]
Traceback (most recent call last):
  File "/home/ec2-user/financial_modeling_assistant/app.py", line 209, in call_openai_api
    response = openai.ChatCompletion.create(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.AuthenticationError: Incorrect API key provided: sk-proj-********************************************************************************************************************************************************G4gA. You can find your API key at https://platform.openai.com/account/api-keys.
2024-12-08 11:30:01,049 DEBUG: Agent importance weights: {} [in /home/ec2-user/financial_modeling_assistant/app.py:859]
2024-12-08 11:30:01,049 DEBUG: Running validation agent [in /home/ec2-user/financial_modeling_assistant/app.py:863]
2024-12-08 11:30:01,049 DEBUG: Calling OpenAI API with prompt: 
You are a Validation Agent tasked with reviewing and validating the financial assumptions provided by each agent. Your objectives are:

1. **Reasoning**: For each financial assumption, compare the values from all agents. Highlight agreements and discrepancies, especially where they diverge from historical data provided by the historical_data_agent. Consider:

   - Adherence to specified ranges.
   - Consistency with sector, industry, and company specifics.
   - Logical coherence among the assumptions.

2. **Confidence Scoring**: Assign a confidence score between 0 and 1 to each agent's output, reflecting:

   - Accuracy and reliability of the data.
   - Alignment with historical trends and current market conditions.
   - The agent's domain expertise.

3. **Output**: Provide your detailed reasoning and the confidence scores in valid JSON format:

{
    "reasoning": "Your detailed reasoning here...",
    "confidence_scores": {
        "sector_agent": ...,
        "industry_agent": ...,
... [in /home/ec2-user/financial_modeling_assistant/app.py:207]
2024-12-08 11:30:01,119 ERROR: Error in OpenAI API call [in /home/ec2-user/financial_modeling_assistant/app.py:221]
Traceback (most recent call last):
  File "/home/ec2-user/financial_modeling_assistant/app.py", line 209, in call_openai_api
    response = openai.ChatCompletion.create(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.AuthenticationError: Incorrect API key provided: sk-proj-********************************************************************************************************************************************************G4gA. You can find your API key at https://platform.openai.com/account/api-keys.
2024-12-08 11:30:01,119 DEBUG: Computing final adjustments with agents [in /home/ec2-user/financial_modeling_assistant/app.py:909]
2024-12-08 11:30:01,119 DEBUG: Final adjustments: {'revenue_growth_rate': 0, 'tax_rate': 0, 'cogs_pct': 0, 'wacc': 0, 'terminal_growth_rate': 0, 'operating_expenses_pct': 0} [in /home/ec2-user/financial_modeling_assistant/app.py:924]
2024-12-08 11:30:01,119 DEBUG: Final adjustments after weighting: {'revenue_growth_rate': 0, 'tax_rate': 0, 'cogs_pct': 0, 'wacc': 0, 'terminal_growth_rate': 0, 'operating_expenses_pct': 0} [in /home/ec2-user/financial_modeling_assistant/app.py:1002]
2024-12-08 11:30:01,119 DEBUG: Validation reasoning: , Confidence scores: {} [in /home/ec2-user/financial_modeling_assistant/app.py:1003]
2024-12-08 11:30:01,119 DEBUG: Final assumptions passed to DCFModel: {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2038223552143872, 'shares_outstanding': 804400000.0, 'depreciation_pct': 0.018708789762944808, 'capex_pct': -0.03292608659694603, 'nwc_pct': -0.023364183839948274} [in /home/ec2-user/financial_modeling_assistant/app.py:1205]
2024-12-08 11:30:01,126 DEBUG: Running DCF model [in /home/ec2-user/financial_modeling_assistant/app.py:1079]
2024-12-08 11:30:01,126 DEBUG: Projecting FCF [in /home/ec2-user/financial_modeling_assistant/app.py:1020]
2024-12-08 11:30:01,130 DEBUG: Year 1: Projected Revenue = 698286750000.0, FCF = 134732928500.0 [in /home/ec2-user/financial_modeling_assistant/app.py:1055]
2024-12-08 11:30:01,131 DEBUG: Year 2: Projected Revenue = 733201087500.0, FCF = 141469574925.0 [in /home/ec2-user/financial_modeling_assistant/app.py:1055]
2024-12-08 11:30:01,133 DEBUG: Year 3: Projected Revenue = 769861141875.0001, FCF = 148543053671.25003 [in /home/ec2-user/financial_modeling_assistant/app.py:1055]
2024-12-08 11:30:01,133 DEBUG: Year 4: Projected Revenue = 808354198968.7501, FCF = 155970206354.81253 [in /home/ec2-user/financial_modeling_assistant/app.py:1055]
2024-12-08 11:30:01,134 DEBUG: Year 5: Projected Revenue = 848771908917.1877, FCF = 163768716672.5532 [in /home/ec2-user/financial_modeling_assistant/app.py:1055]
2024-12-08 11:30:01,134 DEBUG: Calculating terminal value with wacc=0.1, terminal_growth_rate=0.02, last_fcf=163768716672.5532 [in /home/ec2-user/financial_modeling_assistant/app.py:1061]
2024-12-08 11:30:01,135 DEBUG: Discounting cash flows [in /home/ec2-user/financial_modeling_assistant/app.py:1065]
2024-12-08 11:30:01,135 DEBUG: Calculating intrinsic value [in /home/ec2-user/financial_modeling_assistant/app.py:1073]
2024-12-08 11:30:01,135 DEBUG: Fetching DCF model results [in /home/ec2-user/financial_modeling_assistant/app.py:1086]
2024-12-08 11:30:04,709 DEBUG: Received /calculate request [in /home/ec2-user/financial_modeling_assistant/app.py:1150]
2024-12-08 11:30:04,709 DEBUG: Input content: sector=Consumer Discretionary, industry=Retailing, sub_industry=Multiline Retail, scenario=Base Case, stock_ticker=WMT [in /home/ec2-user/financial_modeling_assistant/app.py:1161]
2024-12-08 11:30:04,709 DEBUG: Combined data from uploads: {'COGS': 501249000000, 'Operating Expenses': 135549000000, 'Revenue': 665035000000, 'Current Assets': 76877000000, 'Current Liabilities': 92415000000, 'Capital Expenditures': -21897000000, 'Depreciation': 12442000000} [in /home/ec2-user/financial_modeling_assistant/app.py:1167]
2024-12-08 11:30:04,709 DEBUG: Adjusting financial variables from all agents [in /home/ec2-user/financial_modeling_assistant/app.py:956]
2024-12-08 11:30:04,709 DEBUG: Adjusting for sector: Consumer Discretionary [in /home/ec2-user/financial_modeling_assistant/app.py:407]
2024-12-08 11:30:04,709 DEBUG: Calling OpenAI API with prompt: 
As a financial analyst specializing in the Consumer Discretionary sector, analyze current macroeconomic trends, global economic conditions, regulatory changes, and technological advancements affecting this sector. Based on this analysis, provide financial assumptions that reflect these macro-level influences.

Please provide reasonable values for the following financial assumptions, ensuring they are within the specified ranges:

- **revenue_growth_rate (0.0 to 1.0):** Consider how macroeconomic factors might impact revenue growth in the sector.
- **tax_rate (0.01 to 0.5):** Account for any sector-wide tax policies or changes.
- **cogs_pct (0.01 to 1.0):** Reflect on how global supply chain dynamics affect the cost of goods sold.
- **wacc (0.01 to 0.2):** Adjust for macro-level risks affecting the sector's cost of capital.
- **terminal_growth_rate (0.0 to 0.05):** Consider long-term growth prospects influenced by macro trends.
- **operating_expenses_pct (0.01 to 1.0):** Evaluate how s... [in /home/ec2-user/financial_modeling_assistant/app.py:207]
2024-12-08 11:30:04,770 ERROR: Error in OpenAI API call [in /home/ec2-user/financial_modeling_assistant/app.py:221]
Traceback (most recent call last):
  File "/home/ec2-user/financial_modeling_assistant/app.py", line 209, in call_openai_api
    response = openai.ChatCompletion.create(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.AuthenticationError: Incorrect API key provided: sk-proj-********************************************************************************************************************************************************G4gA. You can find your API key at https://platform.openai.com/account/api-keys.
2024-12-08 11:30:04,770 ERROR: Failed to extract JSON from the assistant's reply. [in /home/ec2-user/financial_modeling_assistant/app.py:447]
2024-12-08 11:30:04,770 DEBUG: Validating assumptions: {} [in /home/ec2-user/financial_modeling_assistant/app.py:180]
2024-12-08 11:30:04,770 DEBUG: Validated assumptions: {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2} [in /home/ec2-user/financial_modeling_assistant/app.py:203]
2024-12-08 11:30:04,770 DEBUG: After sector: {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2} [in /home/ec2-user/financial_modeling_assistant/app.py:958]
2024-12-08 11:30:04,770 DEBUG: Adjusting for industry: Retailing [in /home/ec2-user/financial_modeling_assistant/app.py:454]
2024-12-08 11:30:04,770 DEBUG: Calling OpenAI API with prompt: 
As a financial analyst specializing in the Retailing industry, analyze industry-specific dynamics such as competitive landscape, market demand, technological innovations, and regulatory factors. Based on this analysis, provide financial assumptions that reflect these industry-level influences.

Please provide reasonable values for the following financial assumptions, ensuring they are within the specified ranges:

- **revenue_growth_rate (0.0 to 1.0):** Consider industry growth rates and competitive pressures.
- **tax_rate (0.01 to 0.5):** Include any industry-specific tax incentives or burdens.
- **cogs_pct (0.01 to 1.0):** Reflect industry norms for production or service delivery costs.
- **wacc (0.01 to 0.2):** Adjust for industry-specific risk factors.
- **terminal_growth_rate (0.0 to 0.05):** Consider long-term industry sustainability.
- **operating_expenses_pct (0.01 to 1.0):** Evaluate typical operating expenses within the industry.

**Important:** Return the results in valid J... [in /home/ec2-user/financial_modeling_assistant/app.py:207]
2024-12-08 11:30:04,838 ERROR: Error in OpenAI API call [in /home/ec2-user/financial_modeling_assistant/app.py:221]
Traceback (most recent call last):
  File "/home/ec2-user/financial_modeling_assistant/app.py", line 209, in call_openai_api
    response = openai.ChatCompletion.create(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.AuthenticationError: Incorrect API key provided: sk-proj-********************************************************************************************************************************************************G4gA. You can find your API key at https://platform.openai.com/account/api-keys.
2024-12-08 11:30:04,839 ERROR: Failed to extract JSON from the assistant's reply. [in /home/ec2-user/financial_modeling_assistant/app.py:494]
2024-12-08 11:30:04,839 DEBUG: Validating assumptions: {} [in /home/ec2-user/financial_modeling_assistant/app.py:180]
2024-12-08 11:30:04,839 DEBUG: Validated assumptions: {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2} [in /home/ec2-user/financial_modeling_assistant/app.py:203]
2024-12-08 11:30:04,839 DEBUG: After industry: {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2} [in /home/ec2-user/financial_modeling_assistant/app.py:960]
2024-12-08 11:30:04,839 DEBUG: Adjusting for sub_industry: Multiline Retail [in /home/ec2-user/financial_modeling_assistant/app.py:501]
2024-12-08 11:30:04,839 DEBUG: Calling OpenAI API with prompt: 
As a financial analyst specializing in the Multiline Retail sub-industry, analyze specific trends such as niche market developments, customer behavior, and sub-industry regulatory issues. Based on this detailed analysis, provide financial assumptions that add granularity to our understanding of the sub-industry's performance.

Please provide reasonable values for the following financial assumptions, ensuring they are within the specified ranges:

- **revenue_growth_rate (0.0 to 1.0):** Reflect niche market growth and customer trends.
- **tax_rate (0.01 to 0.5):** Account for sub-industry-specific tax considerations.
- **cogs_pct (0.01 to 1.0):** Consider unique cost structures in the sub-industry.
- **wacc (0.01 to 0.2):** Adjust for risks unique to the sub-industry.
- **terminal_growth_rate (0.0 to 0.05):** Evaluate long-term prospects specific to the sub-industry.
- **operating_expenses_pct (0.01 to 1.0):** Assess typical operating expenses within the sub-industry.

**Important:** R... [in /home/ec2-user/financial_modeling_assistant/app.py:207]
2024-12-08 11:30:04,900 ERROR: Error in OpenAI API call [in /home/ec2-user/financial_modeling_assistant/app.py:221]
Traceback (most recent call last):
  File "/home/ec2-user/financial_modeling_assistant/app.py", line 209, in call_openai_api
    response = openai.ChatCompletion.create(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.AuthenticationError: Incorrect API key provided: sk-proj-********************************************************************************************************************************************************G4gA. You can find your API key at https://platform.openai.com/account/api-keys.
2024-12-08 11:30:04,901 ERROR: Failed to extract JSON from the assistant's reply. [in /home/ec2-user/financial_modeling_assistant/app.py:541]
2024-12-08 11:30:04,901 DEBUG: Validating assumptions: {} [in /home/ec2-user/financial_modeling_assistant/app.py:180]
2024-12-08 11:30:04,901 DEBUG: Validated assumptions: {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2} [in /home/ec2-user/financial_modeling_assistant/app.py:203]
2024-12-08 11:30:04,901 DEBUG: After sub-industry: {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2} [in /home/ec2-user/financial_modeling_assistant/app.py:962]
2024-12-08 11:30:04,901 DEBUG: Adjusting for scenario: Base Case [in /home/ec2-user/financial_modeling_assistant/app.py:548]
2024-12-08 11:30:04,901 DEBUG: Calling OpenAI API with prompt: 
As a financial analyst, provide financial assumptions appropriate for a 'Base Case' scenario.

- **Base Case:** Assumes moderate growth and typical market conditions.
- **Optimistic Scenario:** Assumes favorable conditions leading to higher growth.
- **Pessimistic Scenario:** Assumes challenging conditions leading to lower growth.

Based on the 'Base Case' scenario, adjust the following financial assumptions accordingly, ensuring they are within the specified ranges:

- **revenue_growth_rate (0.0 to 1.0):** Adjust to reflect the scenario's outlook.
- **tax_rate (0.01 to 0.5):** Consider scenario-specific tax implications.
- **cogs_pct (0.01 to 1.0):** Reflect changes in cost structures due to the scenario.
- **wacc (0.01 to 0.2):** Adjust for changes in perceived risk.
- **terminal_growth_rate (0.0 to 0.05):** Consider long-term growth under the scenario.
- **operating_expenses_pct (0.01 to 1.0):** Evaluate how expenses might change.

**Important:** Return the results in valid JSON fo... [in /home/ec2-user/financial_modeling_assistant/app.py:207]
2024-12-08 11:30:04,958 ERROR: Error in OpenAI API call [in /home/ec2-user/financial_modeling_assistant/app.py:221]
Traceback (most recent call last):
  File "/home/ec2-user/financial_modeling_assistant/app.py", line 209, in call_openai_api
    response = openai.ChatCompletion.create(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.AuthenticationError: Incorrect API key provided: sk-proj-********************************************************************************************************************************************************G4gA. You can find your API key at https://platform.openai.com/account/api-keys.
2024-12-08 11:30:04,958 ERROR: Failed to extract JSON from the assistant's reply. [in /home/ec2-user/financial_modeling_assistant/app.py:592]
2024-12-08 11:30:04,958 DEBUG: Validating assumptions: {} [in /home/ec2-user/financial_modeling_assistant/app.py:180]
2024-12-08 11:30:04,958 DEBUG: Validated assumptions: {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2} [in /home/ec2-user/financial_modeling_assistant/app.py:203]
2024-12-08 11:30:04,958 DEBUG: After scenario: {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2} [in /home/ec2-user/financial_modeling_assistant/app.py:964]
2024-12-08 11:30:04,958 DEBUG: Adjusting for company: WMT [in /home/ec2-user/financial_modeling_assistant/app.py:599]
2024-12-08 11:30:05,029 DEBUG: Calling OpenAI API with prompt: 
As a financial analyst, analyze Walmart Inc. (WMT), operating in the Discount Stores. Consider the company's competitive advantages, financial health, strategic initiatives, and market position.

**Company Business Summary:**
Walmart Inc. engages in the operation of retail, wholesale, other units, and eCommerce worldwide. The company operates through three segments: Walmart U.S., Walmart International, and Sam's Club. It operates supercenters, supermarkets, hypermarkets, warehouse clubs, cash and carry stores, and discount stores under Walmart and Walmart Neighborhood Market brands; membership-only warehouse clubs; ecommerce websites, such as walmart.com.mx, walmart.ca, flipkart.com, PhonePe and other sites; and mobile commerce applications. The company offers grocery and consumables, including dairy, meat, bakery, deli, produce, dry, chilled or frozen packaged foods, alcoholic and nonalcoholic beverages, floral, snack foods, candy, other grocery items, health and beauty aids, paper g... [in /home/ec2-user/financial_modeling_assistant/app.py:207]
2024-12-08 11:30:05,093 ERROR: Error in OpenAI API call [in /home/ec2-user/financial_modeling_assistant/app.py:221]
Traceback (most recent call last):
  File "/home/ec2-user/financial_modeling_assistant/app.py", line 209, in call_openai_api
    response = openai.ChatCompletion.create(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.AuthenticationError: Incorrect API key provided: sk-proj-********************************************************************************************************************************************************G4gA. You can find your API key at https://platform.openai.com/account/api-keys.
2024-12-08 11:30:05,093 ERROR: Failed to extract JSON from the assistant's reply. [in /home/ec2-user/financial_modeling_assistant/app.py:648]
2024-12-08 11:30:05,093 DEBUG: Validating assumptions: {} [in /home/ec2-user/financial_modeling_assistant/app.py:180]
2024-12-08 11:30:05,093 DEBUG: Validated assumptions: {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2} [in /home/ec2-user/financial_modeling_assistant/app.py:203]
2024-12-08 11:30:05,093 DEBUG: After company: {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2} [in /home/ec2-user/financial_modeling_assistant/app.py:966]
2024-12-08 11:30:05,093 DEBUG: Adjusting based on feedback [in /home/ec2-user/financial_modeling_assistant/app.py:658]
2024-12-08 11:30:05,093 DEBUG: Summarizing feedback for Consumer Discretionary, Retailing, Multiline Retail, Base Case [in /home/ec2-user/financial_modeling_assistant/app.py:133]
2024-12-08 11:30:05,094 DEBUG: Calling OpenAI API with prompt: 
You have received user feedback for the Consumer Discretionary sector, Retailing industry, and Multiline Retail sub-industry under a Base Case scenario:

No relevant feedback available.

Analyze this feedback to identify common themes or consensus on the assumptions being too high or too low. Based on your analysis, adjust the financial assumptions accordingly, ensuring they are within the specified ranges:

- **revenue_growth_rate (0.0 to 1.0)**
- **tax_rate (0.01 to 0.5)**
- **cogs_pct (0.01 to 1.0)**
- **wacc (0.01 to 0.2)**
- **terminal_growth_rate (0.0 to 0.05)**
- **operating_expenses_pct (0.01 to 1.0)**

**Important:** Return the results in valid JSON format without any additional text or comments. The JSON should directly contain the key-value pairs for each financial assumption, like this:

{
  "revenue_growth_rate": ...,
  "tax_rate": ...,
  "cogs_pct": ...,
  "wacc": ...,
  "terminal_growth_rate": ...,
  "operating_expenses_pct": ...
}

Do not include any additional keys, n... [in /home/ec2-user/financial_modeling_assistant/app.py:207]
2024-12-08 11:30:05,175 ERROR: Error in OpenAI API call [in /home/ec2-user/financial_modeling_assistant/app.py:221]
Traceback (most recent call last):
  File "/home/ec2-user/financial_modeling_assistant/app.py", line 209, in call_openai_api
    response = openai.ChatCompletion.create(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.AuthenticationError: Incorrect API key provided: sk-proj-********************************************************************************************************************************************************G4gA. You can find your API key at https://platform.openai.com/account/api-keys.
2024-12-08 11:30:05,176 ERROR: Failed to extract JSON from the assistant's reply. [in /home/ec2-user/financial_modeling_assistant/app.py:701]
2024-12-08 11:30:05,176 DEBUG: Validating assumptions: {} [in /home/ec2-user/financial_modeling_assistant/app.py:180]
2024-12-08 11:30:05,176 DEBUG: Validated assumptions: {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2} [in /home/ec2-user/financial_modeling_assistant/app.py:203]
2024-12-08 11:30:05,176 DEBUG: After feedback: {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2} [in /home/ec2-user/financial_modeling_assistant/app.py:968]
2024-12-08 11:30:05,176 DEBUG: Adjusting based on historical data for WMT [in /home/ec2-user/financial_modeling_assistant/app.py:757]
2024-12-08 11:30:05,191 WARNING: Field 'Income Before Tax' not found in financial data for WMT. [in /home/ec2-user/financial_modeling_assistant/app.py:768]
2024-12-08 11:30:05,192 DEBUG: Validating assumptions: {} [in /home/ec2-user/financial_modeling_assistant/app.py:180]
2024-12-08 11:30:05,192 DEBUG: Validated assumptions: {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2} [in /home/ec2-user/financial_modeling_assistant/app.py:203]
2024-12-08 11:30:05,192 DEBUG: After historical data: {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2} [in /home/ec2-user/financial_modeling_assistant/app.py:970]
2024-12-08 11:30:05,192 DEBUG: Adjusting based on sentiment for WMT [in /home/ec2-user/financial_modeling_assistant/app.py:708]
2024-12-08 11:30:05,386 DEBUG: Sentiment adjustments: {'revenue_growth_rate': 0.07, 'wacc': 0.09} [in /home/ec2-user/financial_modeling_assistant/app.py:749]
2024-12-08 11:30:05,387 DEBUG: Validating assumptions: {'revenue_growth_rate': 0.07, 'wacc': 0.09} [in /home/ec2-user/financial_modeling_assistant/app.py:180]
2024-12-08 11:30:05,387 DEBUG: Validated assumptions: {'revenue_growth_rate': 0.07, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.09, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2} [in /home/ec2-user/financial_modeling_assistant/app.py:203]
2024-12-08 11:30:05,387 DEBUG: After sentiment: {'revenue_growth_rate': 0.07, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.09, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2} [in /home/ec2-user/financial_modeling_assistant/app.py:972]
2024-12-08 11:30:05,387 DEBUG: All agent adjustments collected: {'sector_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'industry_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'sub_industry_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'scenario_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'company_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'feedback_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'historical_data_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'sentiment_agent': {'revenue_growth_rate': 0.07, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.09, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}} [in /home/ec2-user/financial_modeling_assistant/app.py:984]
2024-12-08 11:30:05,387 DEBUG: Combined pre-sanity assumptions: {'revenue_growth_rate': 0.0525, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.09874999999999999, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.19999999999999998} [in /home/ec2-user/financial_modeling_assistant/app.py:991]
2024-12-08 11:30:05,387 DEBUG: Running pre-validation sanity check [in /home/ec2-user/financial_modeling_assistant/app.py:928]
2024-12-08 11:30:05,387 DEBUG: Calling OpenAI API with prompt: 
You are a financial analyst with deep knowledge of WMT.
Proposed assumptions:
{
  "revenue_growth_rate": 0.0525,
  "tax_rate": 0.21,
  "cogs_pct": 0.6,
  "wacc": 0.09874999999999999,
  "terminal_growth_rate": 0.02,
  "operating_expenses_pct": 0.19999999999999998
}

Historical WACC ~ 0.1, Historical revenue growth ~ 0.05.

Check if assumptions are reasonable. If not, provide corrected assumptions in valid JSON without extra text:
{
  "revenue_growth_rate": ...,
  "tax_rate": ...,
  "cogs_pct": ...,
  "wacc": ...,
  "terminal_growth_rate": ...,
  "operating_expenses_pct": ...
}
... [in /home/ec2-user/financial_modeling_assistant/app.py:207]
2024-12-08 11:30:05,456 ERROR: Error in OpenAI API call [in /home/ec2-user/financial_modeling_assistant/app.py:221]
Traceback (most recent call last):
  File "/home/ec2-user/financial_modeling_assistant/app.py", line 209, in call_openai_api
    response = openai.ChatCompletion.create(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.AuthenticationError: Incorrect API key provided: sk-proj-********************************************************************************************************************************************************G4gA. You can find your API key at https://platform.openai.com/account/api-keys.
2024-12-08 11:30:05,456 DEBUG: Agent adjustments after sanity check: {'sector_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'industry_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'sub_industry_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'scenario_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'company_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'feedback_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'historical_data_agent': {'revenue_growth_rate': 0.05, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.1, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'sentiment_agent': {'revenue_growth_rate': 0.07, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.09, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.2}, 'sanity_check_agent': {'revenue_growth_rate': 0.0525, 'tax_rate': 0.21, 'cogs_pct': 0.6, 'wacc': 0.09874999999999999, 'terminal_growth_rate': 0.02, 'operating_expenses_pct': 0.19999999999999998}} [in /home/ec2-user/financial_modeling_assistant/app.py:997]
2024-12-08 11:30:05,456 DEBUG: Getting agent importance weights [in /home/ec2-user/financial_modeling_assistant/app.py:821]
2024-12-08 11:30:05,456 DEBUG: Calling OpenAI API with prompt: 
You are a financial expert. Assign an importance weight between 0 and 1 to each of the following agents based on their role in providing financial assumptions for a DCF model. Consider that historical data is a strong indicator of future performance.

- sector_agent
- industry_agent
- sub_industry_agent
- scenario_agent
- company_agent
- feedback_agent
- historical_data_agent
- sentiment_agent

The sum of all importance weights should equal 1.

Provide the weights in valid JSON format like this:

{
  "sector_agent": ...,
  "industry_agent": ...,
  "sub_industry_agent": ...,
  "scenario_agent": ...,
  "company_agent": ...,
  "feedback_agent": ...,
  "historical_data_agent": ...,
  "sentiment_agent": ...
}

Do not include any comments or extra text.
... [in /home/ec2-user/financial_modeling_assistant/app.py:207]
2024-12-08 11:30:05,565 ERROR: Error in OpenAI API call [in /home/ec2-user/financial_modeling_assistant/app.py:221]
Traceback (most recent call last):
  File "/home/ec2-user/financial_modeling_assistant/app.py", line 209, in call_openai_api
    response = openai.ChatCompletion.create(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.AuthenticationError: Incorrect API key provided: sk-proj-********************************************************************************************************************************************************G4gA. You can find your API key at https://platform.openai.com/account/api-keys.
2024-12-08 11:30:05,565 DEBUG: Agent importance weights: {} [in /home/ec2-user/financial_modeling_assistant/app.py:859]
2024-12-08 11:30:05,565 DEBUG: Running validation agent [in /home/ec2-user/financial_modeling_assistant/app.py:863]
2024-12-08 11:30:05,566 DEBUG: Calling OpenAI API with prompt: 
You are a Validation Agent tasked with reviewing and validating the financial assumptions provided by each agent. Your objectives are:

1. **Reasoning**: For each financial assumption, compare the values from all agents. Highlight agreements and discrepancies, especially where they diverge from historical data provided by the historical_data_agent. Consider:

   - Adherence to specified ranges.
   - Consistency with sector, industry, and company specifics.
   - Logical coherence among the assumptions.

2. **Confidence Scoring**: Assign a confidence score between 0 and 1 to each agent's output, reflecting:

   - Accuracy and reliability of the data.
   - Alignment with historical trends and current market conditions.
   - The agent's domain expertise.

3. **Output**: Provide your detailed reasoning and the confidence scores in valid JSON format:

{
    "reasoning": "Your detailed reasoning here...",
    "confidence_scores": {
        "sector_agent": ...,
        "industry_agent": ...,
... [in /home/ec2-user/financial_modeling_assistant/app.py:207]
2024-12-08 11:30:05,632 ERROR: Error in OpenAI API call [in /home/ec2-user/financial_modeling_assistant/app.py:221]
Traceback (most recent call last):
  File "/home/ec2-user/financial_modeling_assistant/app.py", line 209, in call_openai_api
    response = openai.ChatCompletion.create(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/home/ec2-user/financial_modeling_assistant/venv/lib64/python3.9/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.AuthenticationError: Incorrect API key provided: sk-proj-********************************************************************************************************************************************************G4gA. You can find your API key at https://platform.openai.com/account/api-keys.
2024-12-08 11:30:05,632 DEBUG: Computing final adjustments with agents [in /home/ec2-user/financial_modeling_assistant/app.py:909]
2024-12-08 11:30:05,632 DEBUG: Final adjustments: {'revenue_growth_rate': 0, 'tax_rate': 0, 'cogs_pct': 0, 'wacc': 0, 'terminal_growth_rate': 0, 'operating_expenses_pct': 0} [in /home/ec2-user/financial_modeling_assistant/app.py:924]
2024-12-08 11:30:05,632 DEBUG: Final adjustments after weighting: {'revenue_growth_rate': 0, 'tax_rate': 0, 'cogs_pct': 0, 'wacc': 0, 'terminal_growth_rate': 0, 'operating_expenses_pct': 0} [in /home/ec2-user/financial_modeling_assistant/app.py:1002]
2024-12-08 11:30:05,632 DEBUG: Validation reasoning: , Confidence scores: {} [in /home/ec2-user/financial_modeling_assistant/app.py:1003]
2024-12-08 11:30:05,632 DEBUG: Final assumptions passed to DCFModel: {'revenue_growth_rate': 0, 'tax_rate': 0, 'cogs_pct': 0, 'wacc': 0, 'terminal_growth_rate': 0, 'operating_expenses_pct': 0.2038223552143872, 'shares_outstanding': 8044000000.0, 'depreciation_pct': 0.018708789762944808, 'capex_pct': -0.03292608659694603, 'nwc_pct': -0.023364183839948274} [in /home/ec2-user/financial_modeling_assistant/app.py:1205]
2024-12-08 11:30:05,638 DEBUG: Running DCF model [in /home/ec2-user/financial_modeling_assistant/app.py:1079]
2024-12-08 11:30:05,638 DEBUG: Projecting FCF [in /home/ec2-user/financial_modeling_assistant/app.py:1020]
2024-12-08 11:30:05,642 DEBUG: Year 1: Projected Revenue = 665035000000, FCF = 551383000000.0 [in /home/ec2-user/financial_modeling_assistant/app.py:1055]
2024-12-08 11:30:05,643 DEBUG: Year 2: Projected Revenue = 665035000000, FCF = 551383000000.0 [in /home/ec2-user/financial_modeling_assistant/app.py:1055]
2024-12-08 11:30:05,645 DEBUG: Year 3: Projected Revenue = 665035000000, FCF = 551383000000.0 [in /home/ec2-user/financial_modeling_assistant/app.py:1055]
2024-12-08 11:30:05,646 DEBUG: Year 4: Projected Revenue = 665035000000, FCF = 551383000000.0 [in /home/ec2-user/financial_modeling_assistant/app.py:1055]
2024-12-08 11:30:05,647 DEBUG: Year 5: Projected Revenue = 665035000000, FCF = 551383000000.0 [in /home/ec2-user/financial_modeling_assistant/app.py:1055]
2024-12-08 11:30:05,647 DEBUG: Calculating terminal value with wacc=0, terminal_growth_rate=0, last_fcf=551383000000.0 [in /home/ec2-user/financial_modeling_assistant/app.py:1061]
2024-12-08 11:30:05,647 ERROR: Error in /calculate route [in /home/ec2-user/financial_modeling_assistant/app.py:1238]
Traceback (most recent call last):
  File "/home/ec2-user/financial_modeling_assistant/app.py", line 1226, in calculate_intrinsic_value
    model.run_model()
  File "/home/ec2-user/financial_modeling_assistant/app.py", line 1081, in run_model
    self.calculate_terminal_value()
  File "/home/ec2-user/financial_modeling_assistant/app.py", line 1062, in calculate_terminal_value
    self.terminal_value = last_fcf * (1 + terminal_growth_rate) / (wacc - terminal_growth_rate)
ZeroDivisionError: float division by zero
